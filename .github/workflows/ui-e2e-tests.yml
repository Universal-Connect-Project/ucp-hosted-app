name: UI E2E Tests

on: pull_request

jobs:
  setup-env:
    name: 'Load ENV Vars'
    uses: ./.github/workflows/setup-env.yml
    secrets: inherit

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [setup-env]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          check-latest: true
      - run: npm ci

      - name: Setup Postgres Database
        run: |
          npm run db:setup --workspace apps/institution-service

      - name: 'Create auth env file'
        run: |
          ENV_FILE_PATH=./apps/authentication-service/.env
          touch ${ENV_FILE_PATH}
          
          # Vars
          echo -e "${{ needs.setup-env.outputs.env_vars }}" >> ${ENV_FILE_PATH}
          
          # Secrets (can't load these from another job, due to GH security features)
          echo AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }} >> ${ENV_FILE_PATH}          
          echo E2E_CLIENT_SECRET=${{ secrets.E2E_CLIENT_SECRET }} >> ${ENV_FILE_PATH}
          echo AUTH_PASSWORD_WITH_KEY_ROLES=${{ secrets.AUTH_PASSWORD_WITH_KEY_ROLES }} >> ${ENV_FILE_PATH}
          echo AUTH_PASSWORD_WITHOUT_KEY_ROLES=${{ secrets.AUTH_PASSWORD_WITHOUT_KEY_ROLES }} >> ${ENV_FILE_PATH}

          cat ${ENV_FILE_PATH}

      - name: "Create institution env file"
        run: |
          ENV_FILE_PATH=./apps/institution-service/.env
          touch ${ENV_FILE_PATH}

          # Vars
          echo -e "${{ needs.setup-env.outputs.env_vars }}" >> ${ENV_FILE_PATH}

          # Secrets (can't load these from another job, due to GH security features)
          echo WIDGET_CLIENT_SECRET=${{ secrets.WIDGET_CLIENT_SECRET }} >> ${ENV_FILE_PATH}
          echo WEB_UI_CLIENT_SECRET=${{ secrets.WEB_UI_CLIENT_SECRET }} >> ${ENV_FILE_PATH}
          echo E2E_INSTITUTION_PASSWORD=${{ secrets.E2E_INSTITUTION_PASSWORD }} >> ${ENV_FILE_PATH}

          cat ${ENV_FILE_PATH}

      - name: Cypress run
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_auth_username_with_widget_role: ${{ secrets.AUTH_USERNAME_WITH_WIDGET_ROLE }}
          CYPRESS_auth_password_with_widget_role: ${{ secrets.AUTH_PASSWORD_WITH_WIDGET_ROLE }}
          CYPRESS_auth_username_without_widget_role: ${{ secrets.AUTH_USERNAME_WITHOUT_WIDGET_ROLE }}
          CYPRESS_auth_password_without_widget_role: ${{ secrets.AUTH_PASSWORD_WITHOUT_WIDGET_ROLE }}
          CYPRESS_auth_username_super_admin: ${{ secrets.UI_AUTH_USERNAME_SUPER_ADMIN }}
          CYPRESS_auth_password_super_admin: ${{ secrets.UI_AUTH_PASSWORD_SUPER_ADMIN }}

        with:
          project: apps/ucp-ui
          start: npm run dev
          wait-on: 'http://localhost:3000, http://localhost:8089/ping, http://localhost:8088/ping'
          wait-on-timeout: 120

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: apps/ucp-ui/cypress/screenshots
