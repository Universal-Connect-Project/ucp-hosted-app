name: Institution E2E (No Institutions)

on: pull_request

jobs:
  e2e-tests:
    name: Cypress (Institutions)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

      redis:
        image: redis:7.2-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 20s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      influxdb:
        image: influxdb:2.7
        env:
          INFLUXDB_ADMIN_USER: admin
          INFLUXDB_ADMIN_PASSWORD: password
          INFLUXDB_HTTP_AUTH_ENABLED: "false"
          INFLUXDB_ORG: ucp-org
          INFLUXDB_BUCKET: performance
          INFLUXDB_TOKEN: my-secret-token
        options: >-
          --health-cmd "curl --silent --fail http://localhost:8086/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8086:8086

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          check-latest: true

      - name: Install dependencies
        run: npm ci

      - name: Setup Postgres Database
        run: |
          npm run db:setup:minimal --workspace apps/institution-service

      - name: Setup InfluxDB Bucket & Org
        run: |
          curl -X POST http://localhost:8086/api/v2/setup \
            --header "Content-Type: application/json" \
            --data '{
              "username": "admin",
              "password": "password",
              "org": "ucp-org",
              "bucket": "performance",
              "token": "my-secret-token"
            }'

      - name: "Create authentication env file"
        run: |
          ENV_FILE_PATH=./apps/authentication-service/env/secretStaging.env
          touch ${ENV_FILE_PATH}

          echo AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }} >> ${ENV_FILE_PATH}

      - name: "Create institution env file"
        run: |
          ENV_FILE_PATH=./apps/institution-service/env/secretStaging.env
          touch ${ENV_FILE_PATH}

          echo FINICITY_APP_KEY=${{ secrets.FINICITY_APP_KEY }} >> ${ENV_FILE_PATH}
          echo FINICITY_PARTNER_ID=${{ secrets.FINICITY_PARTNER_ID }} >> ${ENV_FILE_PATH}
          echo FINICITY_SECRET=${{ secrets.FINICITY_SECRET }} >> ${ENV_FILE_PATH}

      - name: Seed Influx with Performance Data
        run: npm run test:seedInfluxPerformance --workspace apps/performance-service

      - name: Cypress run (General)
        uses: cypress-io/github-action@v6
        with:
          project: apps/institution-service
          start: |
            npm run dev --workspace apps/authentication-service & sleep 10
            npm run dev:noRateLimiting --workspace apps/institution-service
          wait-on: "http://localhost:8089/ping, http://localhost:8088/ping"
          wait-on-timeout: 180000
          spec: apps/institution-service/cypress/e2e/noInstitutions/*.cy.ts
        env:
          REDIS_SERVER: redis://localhost:6379
          CYPRESS_MX_AGGREGATOR_ADMIN_USERNAME: ${{ secrets.MX_AGGREGATOR_ADMIN_USERNAME }}
          CYPRESS_MX_AGGREGATOR_ADMIN_PASSWORD: ${{ secrets.MX_AGGREGATOR_ADMIN_PASSWORD }}
          CYPRESS_E2E_INSTITUTION_PASSWORD: ${{ secrets.E2E_INSTITUTION_PASSWORD }}
          CYPRESS_E2E_INSTITUTION_USERNAME: ${{ vars.E2E_INSTITUTION_USERNAME }}
          CYPRESS_SUPER_ADMIN_PASSWORD: ${{ secrets.SUPER_ADMIN_PASSWORD }}
          CYPRESS_SUPER_ADMIN_USERNAME: ${{ vars.SUPER_ADMIN_USERNAME }}
          CYPRESS_WEB_UI_CLIENT_ID: ${{ vars.WEB_UI_CLIENT_ID }}
          CYPRESS_WIDGET_CLIENT_ID: ${{ vars.WIDGET_CLIENT_ID }}
          CYPRESS_WIDGET_CLIENT_SECRET: ${{ secrets.WIDGET_CLIENT_SECRET }}
          CYPRESS_PERFORMANCE_SERVICE_CLIENT_ID: ${{ vars.PERFORMANCE_SERVICE_CLIENT_ID }}
          CYPRESS_PERFORMANCE_SERVICE_CLIENT_SECRET: ${{ secrets.PERFORMANCE_SERVICE_CLIENT_SECRET }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: apps/institution-service/cypress/screenshots
