name: Institution E2E

on: pull_request

jobs:
  setup-env:
    name: "Load ENV Vars"
    uses: ./.github/workflows/setup-env.yml
    secrets: inherit

  e2e-tests:
    name: Cypress (Institutions)
    runs-on: ubuntu-latest
    needs: [setup-env]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          check-latest: true

      - name: Install dependencies
        run: npm ci

      - name: Setup Postgres Database
        run: |
          npm run db:setup --workspace apps/institution-service

      - name: "Create env file"
        run: |
          ENV_FILE_PATH=./apps/institution-service/.env
          AUTH_ENV_FILE_PATH=./apps/authentication-service/.env
          touch ${ENV_FILE_PATH}
          touch ${AUTH_ENV_FILE_PATH}

          # Vars
          echo -e "${{ needs.setup-env.outputs.env_vars }}" >> ${ENV_FILE_PATH}

          # Secrets (can't load these from another job, due to GH security features)

          # For authentication service
          echo AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }} >> ${ENV_FILE_PATH}          
          echo WIDGET_CLIENT_SECRET=${{ secrets.WIDGET_CLIENT_SECRET }} >> ${ENV_FILE_PATH}          

          # Copy the env file to the authentication service
          cp ${ENV_FILE_PATH} ${AUTH_ENV_FILE_PATH}

      - name: Cypress run (General)
        uses: cypress-io/github-action@v6
        with:
          project: apps/institution-service
          start: |
            npm run dev --workspace apps/authentication-service
            npm run dev --workspace apps/institution-service
          wait-on: "http://localhost:8089/ping, http://localhost:8088/ping"
          spec: apps/institution-service/cypress/e2e/*.cy.ts
        env:
          AGGREGATOR_ADMIN_USERNAME: ${{ secrets.AGGREGATOR_ADMIN_USERNAME }}
          AGGREGATOR_ADMIN_PASSWORD: ${{ secrets.AGGREGATOR_ADMIN_PASSWORD }}
          E2E_INSTITUTION_PASSWORD: ${{ secrets.E2E_INSTITUTION_PASSWORD }}
          SUPER_ADMIN_PASSWORD: ${{ secrets.SUPER_ADMIN_PASSWORD }}

      - name: Cypress run (Rate Limit cacheList endpoint)
        uses: cypress-io/github-action@v6
        with:
          project: apps/institution-service
          start: |
            npm run dev --workspace apps/institution-service
          wait-on: "http://localhost:8088/ping"
          spec: apps/institution-service/cypress/e2e/special/rateLimitingCacheList.cy.ts
        env:
          AGGREGATOR_ADMIN_USERNAME: ${{ secrets.AGGREGATOR_ADMIN_USERNAME }}
          AGGREGATOR_ADMIN_PASSWORD: ${{ secrets.AGGREGATOR_ADMIN_PASSWORD }}
          E2E_INSTITUTION_PASSWORD: ${{ secrets.E2E_INSTITUTION_PASSWORD }}
          SUPER_ADMIN_PASSWORD: ${{ secrets.SUPER_ADMIN_PASSWORD }}

      - name: Cypress run (Rate Limit default)
        uses: cypress-io/github-action@v6
        with:
          project: apps/institution-service
          start: |
            npm run dev --workspace apps/institution-service
          wait-on: "http://localhost:8088/ping"
          spec: apps/institution-service/cypress/e2e/special/rateLimiting.cy.ts
        env:
          AGGREGATOR_ADMIN_USERNAME: ${{ secrets.AGGREGATOR_ADMIN_USERNAME }}
          AGGREGATOR_ADMIN_PASSWORD: ${{ secrets.AGGREGATOR_ADMIN_PASSWORD }}
          E2E_INSTITUTION_PASSWORD: ${{ secrets.E2E_INSTITUTION_PASSWORD }}
          SUPER_ADMIN_PASSWORD: ${{ secrets.SUPER_ADMIN_PASSWORD }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: apps/institution-service/cypress/screenshots
